<?php  if (session('errorMsg')) : ?>
    <?php foreach (session('errorMsg') as $error) : ?>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <?= $error ?>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <?php break; ?>
<?php endforeach ?>
<?php endif ?>

<?php if (session('successMsg')) : ?>
    <?php foreach (session('successMsg') as $success) : ?>
        <div class="alert alert-success fade show" role="alert">
            <?= $success ?>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <?php break; ?>
<?php endforeach ?>
<?php endif ?>


$result = $this->service->hasLoginInfo($this->request);
        if($result["status"] === ResultUtils::STATUS_CODE_OK){
            return redirect("admin/home");
        }elseif($result["status"] === ResultUtils::STATUS_CODE_ERR){
            return redirect("admin/login")->with($result['messageCode'], $result['messages']);
        }
        return redirect("admin/home");



<?php

namespace App\Controllers\Admin;

use App\Controllers\BaseController;
use App\Services\ProductsService;


class ProductControllers extends BaseController
{
    /**
        @var Service
     */
    private $service;

    public function __construct()
    {
        $this->service = new ProductsService();
    }


    public function list(): string
    {
        $data = [];


        $cssFiles = [
            'http://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js',
            base_url() . '/assets/admin/js/datatable.js',
            base_url() . '/assets/admin/js/event.js',

        ];

        $jsFiles = [
            'https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css',
            base_url() . '/assets/admin/css/datatable.css'

        ];
        $dataLayout['products'] = $this->service->getAllProduct();
        
        $data = $this->loadMasterLayout($data, 'Danh sách sản phẩm', 'admin/pages/product/list', $dataLayout, $cssFiles, $jsFiles);
     
        return view('admin/main', $data);
    }

    public function add()
    {
        $data = [];
        $data = $this->loadMasterLayout($data, 'Thêm sản phẩm', 'admin/pages/product/add');
        return view('admin/main', $data);
    }

    public function create()
    {
        $result = $this->service->addProductsInfo($this->request);
        return redirect('admin/product/add')->withInput()->with($result['massageCode'], $result['messages']);
    }

    public function addProducts()
    {
        $id = $this->request->getPost('id');
        $images = $this->request->getPost('images');
        $name = $this->request->getPost('name');
        $description = $this->request->getPost('description');
        $amount = $this->request->getPost('amount');
        $category = $this->request->getPost('category');

        $target_dir = "public/uploads";
        $target_file = $target_dir . basename($_FILES["images"]["name"]);
        $uploadOk = 1;
        $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

        // Check if image file is a actual image or fake image
        if (isset($_POST["submit"])) {
            $check = getimagesize($_FILES["images"]["tmp_name"]);
            if ($check !== false) {
                echo "File is an image - " . $check["mime"] . ".";
                $uploadOk = 1;
            } else {
                echo "File is not an image.";
                $uploadOk = 0;
            }
        }

        // Check if file already exists
        if (file_exists($target_file)) {
            echo "Sorry, file already exists.";
            $uploadOk = 0;
        }

        // Check file size
        if ($_FILES["images"]["size"] > 5000000) {
            echo "Sorry, your file is too large.";
            $uploadOk = 0;
        }

        // Allow certain file formats
        if (
            $imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg"
            && $imageFileType != "gif"
        ) {
            echo "Sorry, only JPG, JPEG, PNG & GIF files are allowed.";
            $uploadOk = 0;
        }

        // Check if $uploadOk is set to 0 by an error
        if ($uploadOk == 0) {
            echo "Sorry, your file was not uploaded.";
            // if everything is ok, try to upload file
        } else {
            if (move_uploaded_file($_FILES["images"]["tmp_name"], $target_file)) {
                echo "The file " . htmlspecialchars(basename($_FILES["images"]["name"])) . " has been uploaded.";
            } else {
                echo "Sorry, there was an error uploading your file.";
            }
        }
    }
}
